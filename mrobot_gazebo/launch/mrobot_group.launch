<launch> 
    <!-- 设置launch文件的参数 --> 


	<!-- 通过修改该属性设置仿真场景 -->
    <arg name="world_name" value="$(find mrobot_gazebo)/worlds/playground.world"/> 
    <arg name="paused" default="false"/> 
    <arg name="use_sim_time" default="true"/> 
    <arg name="gui" default="true"/> 
    <arg name="headless" default="false"/> 
    <arg name="debug" default="false"/> 
 
    <!-- 运行gazebo仿真环境 --> 
    <include file="$(find gazebo_ros)/launch/empty_world.launch"> 
        <arg name="world_name" value="$(arg world_name)" /> 
        <arg name="debug" value="$(arg debug)" /> 
        <arg name="gui" value="$(arg gui)" /> 
        <arg name="paused" value="$(arg paused)"/> 
        <arg name="use_sim_time" value="$(arg use_sim_time)"/> 
        <arg name="headless" value="$(arg headless)"/> 
    </include> 
 
	 
    <!-- 加载机器人模型描述参数 --> 
	<!-- begin robot1 --> 
	<group ns="ares1"> 
    	<!-- 加载机器人模型描述参数 -->
		<param name="robot_description" command="$(find xacro)/xacro --inorder '$(find mrobot_gazebo)/urdf/mrobot_with_rplidar.urdf.xacro' ns:=ares1" /> 

		<!-- 运行joint_state_publisher节点，发布机器人的关节状态  -->
		<node name="joint_state_publisher" pkg="joint_state_publisher" type="joint_state_publisher" ></node> 

		<!-- 运行robot_state_publisher节点，发布tf  -->
		<node name="robot_state_publisher" pkg="robot_state_publisher" type="robot_state_publisher"  output="screen" >
			<param name="publish_frequency" type="double" value="50.0" />
		</node>

		<!-- 在gazebo中加载机器人模型-->
		<node name="urdf_spawner" pkg="gazebo_ros" type="spawn_model" respawn="false" output="screen"
			args="-urdf -model ares1  -param robot_description "/> 
			
	</group> 
    
	<!-- begin robot2 --> 
	<group ns="ares2"> 
       	<!-- 加载机器人模型描述参数 -->
		<param name="robot_description" command="$(find xacro)/xacro --inorder '$(find mrobot_gazebo)/urdf/mrobot_with_rplidar.urdf.xacro' ns:=ares2" /> 

		<!-- 运行joint_state_publisher节点，发布机器人的关节状态  -->
		<node name="joint_state_publisher" pkg="joint_state_publisher" type="joint_state_publisher" ></node> 

		<!-- 运行robot_state_publisher节点，发布tf  -->
		<node name="robot_state_publisher" pkg="robot_state_publisher" type="robot_state_publisher"  output="screen" >
			<param name="publish_frequency" type="double" value="50.0" />
		</node>

		<!-- 在gazebo中加载机器人模型-->
		<node name="urdf_spawner" pkg="gazebo_ros" type="spawn_model" respawn="false" output="screen"
			args="-urdf -model ares2 -param robot_description -x 0.8"/> 
	</group> 

	 
	<!-- begin robot3 --> 
	<group ns="ares3"> 
    	 <!-- 加载机器人模型描述参数 -->
		<param name="robot_description" command="$(find xacro)/xacro --inorder '$(find mrobot_gazebo)/urdf/mrobot_with_rplidar.urdf.xacro' ns:=ares3" /> 

		<!-- 运行joint_state_publisher节点，发布机器人的关节状态  -->
		<node name="joint_state_publisher" pkg="joint_state_publisher" type="joint_state_publisher" ></node> 

		<!-- 运行robot_state_publisher节点，发布tf  -->
		<node name="robot_state_publisher" pkg="robot_state_publisher" type="robot_state_publisher"  output="screen" >
			<param name="publish_frequency" type="double" value="50.0" />
		</node>

		<!-- 在gazebo中加载机器人模型-->
		<node name="urdf_spawner" pkg="gazebo_ros" type="spawn_model" respawn="false" output="screen"
			args="-urdf -model ares3  -param robot_description -y 0.8"/>  
	</group>
</launch>